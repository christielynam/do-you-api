{"version":3,"sources":["assets/wordcloud_man.png","assets/no-back.png","components/Lightbulb/index.js","actions/index.js","containers/LandingPage/index.js","containers/Header/index.js","containers/Login/index.js","thunks/fetchUserFromDB.js","utils/baseUrl.js","containers/Signup/index.js","thunks/adduserToDB.js","containers/Controls/index.js","components/Loading/index.js","utils/keys.js","containers/Error/index.js","thunks/fetchResults.js","containers/Profile/index.js","thunks/fetchAllTests.js","components/PersonalityCard/index.js","components/PersonalityTypeContainer/index.js","containers/PersonalityTypes/index.js","thunks/fetchPersonalities.js","components/AssessmentsList/index.js","components/Slide/index.js","containers/Assessments/index.js","thunks/fetchAssessment.js","thunks/addTestInfo.js","thunks/fetchSlides.js","thunks/updateSlideResponse.js","components/IntroExtroResults/index.js","components/CoreResults/index.js","components/CareerResults/index.js","components/HerosResults/index.js","components/MoviesResults/index.js","components/PersuasionResults/index.js","containers/Results/index.js","components/App/App.js","serviceWorker.js","reducers/index.js","reducers/assessment-reducer.js","reducers/error-reducer.js","reducers/loading-reducer.js","reducers/personalities-reducer.js","reducers/results-reducer.js","reducers/slides-reducer.js","reducers/tests-reducer.js","reducers/user-reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Lightbulb","_ref","bulbNum","route","text","react_default","a","createElement","className","concat","id","data-name","xmlns","viewBox","d","react_router_dom","to","setUser","user","type","loading","bool","error","msg","setAssessment","assessment","setPersonalities","personalities","setTests","tests","setSlides","slides","setResults","results","connect","dispatch","src","wordcloudMan","alt","components_Lightbulb","Header","handleRouteHome","_this$props","_this","props","history","push","_this2","this","onClick","e","preventDefault","lightbulbs","Component","state","Login","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","_e$target","target","name","value","setState","defineProperty","loginUser","_this$state","email","password","fetchUserFromDB","loggedIn","localStorage","setItem","JSON","stringify","prevProps","updateLocalStorage","_this$state2","react_router","onSubmit","placeholder","autoFocus","onChange","disabled","pw","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","fetch","method","headers","Content-Type","body","sent","ok","statusText","json","stop","_x","apply","arguments","Signup","resetForm","confirmPassword","handleSubmit","validatePassword","addUserToDB","instruction","_this$state3","userName","toUpperCase","removeUser","removeResults","removeSlides","removeAssessment","handleSignOut","Loading","publicKey","fetchResults","testId","url","Authorization","completed_at","assign","deck_id","Profile","handleRecentTest","test","test_id","testComplete","fetchAllTests","_this$props2","length","map","key","created_at","split","_this$props3","path","components_Loading","recentAssessments","userId","PersonalityCard","personality_type","description","PersonalityTypeContainer","displayCareerTypes","badges","object","components_PersonalityCard","PersonalityTypes","fetchPersonalities","personality","components_PersonalityTypeContainer","handleTypesDisplay","AssessmentsList","Slide","slideData","manageSlideUpdate","caption","image_desktop_retina","Assessments","slide","boolean","updateSlideResponse","counter","testType","fetchAssessment","fetchSlides","addTestInfo","slideToRender","components_Slide","handleSlideDisplay","user_id","abrupt","time_taken","IntroExtroResults","introExtroDisplay","personality_types","badge","image_small","Math","round","score","details","title","keywords","CoreResults","personality_blend","complementConflict","personalityMatches","_type$personality_typ","personality_type_1","personality_type_2","CareerResults","career_matches","careerMatches","career","_career$career","picture","HeroesResults","MoviesResults","PersuasionResults","persuasionMatches","Results","deckId","components_IntroExtroResults","components_CareerResults","components_CoreResults","HerosResults","components_PersuasionResults","components_MoviesResults","handleResultsDisplay","App","exact","component","LandingPage","Controls","render","containers_Assessments","Boolean","window","location","hostname","match","rootReducer","combineReducers","undefined","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c75c0d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wordcloud_man.2b344a1a.png\";","module.exports = __webpack_public_path__ + \"static/media/no-back.a284d700.png\";","import React from 'react'\nimport './styles.scss'\nimport { Link } from 'react-router-dom'\n\nconst Lightbulb = ({ bulbNum, route, text }) => (\n  <div className='bulb-link'>\n      <svg className={`bulb ${bulbNum}`} id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 119.51 386.54\"><title>Lightbulb</title><path className=\"cls-1\" d=\"M80.26,270.52H38.85a57.6,57.6,0,1,0,41.41,0Z\"/><path className=\"cls-1\" d=\"M35.77,268.52H83.33a3.56,3.56,0,1,0,0-7.12H35.77a3.56,3.56,0,0,0,0,7.13Z\"/><path className=\"cls-1\" d=\"M35.77,259.94H83.33a3.56,3.56,0,1,0,0-7.12H35.77a3.56,3.56,0,0,0,0,7.13Z\"/><path className=\"cls-1\" d=\"M35.77,251.35H83.33a3.56,3.56,0,1,0,0-7.12H35.77a3.56,3.56,0,0,0,0,7.13Z\"/><path className=\"cls-1\" d=\"M44,242.77H75.12a3.56,3.56,0,0,0,0-7.12H72.21c-.93-2.91-6.6-5.18-9.62-5.19L65.49,0l-3,0-2.9,230.46h-.06L56.62,0l-3,0,2.9,230.42c-3,0-8.69,2.27-9.62,5.19H44a3.56,3.56,0,1,0,0,7.13Z\"/></svg>\n      <Link to={`${route}`}>\n        <div className={`bulb-div ${text}`}><p>{text}</p></div>\n      </Link>\n    </div>\n  )\n\nexport default Lightbulb\n","export const setUser = (user) => ({\n  type: 'SET_USER',\n  user\n})\n\nexport const removeUser = () => ({\n  type: 'REMOVE_USER'\n})\n\nexport const loading = (bool) => ({\n  type: 'LOADING',\n  loading: bool\n}) \n\nexport const error = (msg) => ({\n  type: 'ERROR',\n  msg\n})\n\nexport const setAssessment = (assessment) => ({\n  type: 'SET_ASSESSMENT',\n  assessment\n})\n\nexport const removeAssessment = () => ({\n  type: 'REMOVE_ASSESSMENT'\n})\n\nexport const setPersonalities = (personalities) => ({\n  type: 'SET_PERSONALITIES',\n  personalities\n})\n\nexport const setTests = (tests) => ({\n  type: 'SET_TESTS',\n  tests\n})\n\nexport const removeTests = () => ({\n  type: 'SET_TESTS'\n})\n\nexport const setSlides = (slides) => ({\n  type: 'SET_SLIDES',\n  slides\n})\n\nexport const removeSlides = () => ({\n  type: 'REMOVE_SLIDES'\n})\n\nexport const setResults = (results) => ({\n  type: 'SET_RESULTS',\n  results\n})\n\nexport const removeResults = () => ({\n  type: 'REMOVE_RESULTS'\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport './styles.scss'\nimport wordcloudMan from '../../assets/wordcloud_man.png'\nimport Lightbulb from '../../components/Lightbulb'\nimport { setUser } from '../../actions'\n\n// const loggedIn = () => {\n//   const token = window.location.href.split('=')[1];\n//   return token ? token : false\n// }\n\nconst LandingPage = () => {\n  // const token = loggedIn()\n  // console.log(token)\n\n  // if (token) {\n  //   const userObj = jwt.decode(token, secret, true)\n  //   console.log(userObj)\n  //   setUser([userObj])\n  //   return(\n  //     <Redirect to='/controls' />\n  //   )\n  // }\n\n  return (\n    <div className='landing-page'>\n      <section className='hero-section'>\n        <header className='landing-header'>\n          <h1 className='main-title'>do you.</h1>\n          <h3 className='main-tagline'>let your Personality shine.</h3>\n        </header>\n        <article className='mission-article'>\n          <div className='wordcloud-container'>\n            <img className='wordcloud-man' src={wordcloudMan} alt='wordcloud man' />\n          </div>\n          <div className='mission-statement'>\n            <h6 className='purpose'>Recognizing and understanding your personality type can change the way you see yourself - which in turns affects everything you do and every aspect of your life. Please take any of our personality assessments to help you unlock your potential, find your passion, and DO YOU!</h6>\n          </div>\n        </article>\n      </section>\n      <section className='lightbulb-section'>\n        <Lightbulb bulbNum={'bulb-one'} text={'sign up'} route={'/signup'} />\n        <Lightbulb bulbNum={'bulb-two'} text={'personalities'} route={'/personality-types'}/>\n        <Lightbulb bulbNum={'bulb-three'} text={'login'} route={'/login'} />\n        <Lightbulb bulbNum={'bulb-four'} text={'assessments'} route={'/assessments'} />\n    </section>\n  </div>\n    \n  )\n}\n\nexport const mapDispatchToProps = dispatch => ({\n  setUser: (user) => dispatch(setUser(user))\n})\n\nexport default connect(null, mapDispatchToProps)(LandingPage)","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport './styles.scss'\nimport lightbulbs from '../../assets/no-back.png'\n\nclass Header extends Component {\n\n  handleRouteHome = () => {\n    const { user, history } = this.props\n    if (user.id) {\n      history.push('/controls')\n    } else {\n      history.push('/')\n    }\n  }\n\n  render() {\n    return (\n      <div className='header'>\n      <div className='header-text'>\n        <Link to='/'\n          className='home-page'\n          onClick={ (e) => {\n            e.preventDefault();\n            // props.removeTestResultsFromStore();\n            // props.removeSlidesFromStore();\n            // props.removeFetchedAssessment();\n            this.handleRouteHome();\n          } }>\n          <h1 className='app-title'>do you.</h1>\n        </Link>\n        <h3 className='app-tagline'>let your Personality shine.</h3>\n      </div>\n      <div className='lightbulb-container'>\n        <img className='lightbulbs' src={lightbulbs} alt='hanging lightbulb logo' />\n      </div>\n    </div>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({\n  user: state.user\n})\n\nexport const mapDispatchToProps = dispatch => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom'\nimport { fetchUserFromDB } from '../../thunks/fetchUserFromDB'\nimport './styles.scss'\n\nclass Login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      loggedIn: false\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target\n    this.setState({ [name]: value })\n  }\n\n  updateLocalStorage(user) {\n    localStorage.setItem('user', JSON.stringify(user))\n  }\n\n  loginUser = (e) => {\n    const { email, password } = this.state\n    e.preventDefault()\n    this.props.fetchUserFromDB(email, password)\n  }\n  \n  componentDidUpdate(prevProps) {\n    const { user } = this.props\n    if (user.id !== prevProps.user.id) {\n      this.setState({ loggedIn: true })\n      this.updateLocalStorage(user)\n    }\n  }\n\n  render() {\n    const {email, password, loggedIn} = this.state\n    const { user } = this.props\n\n    if (loggedIn) {\n      return (\n        <Redirect to='/controls' />\n      )\n    }\n\n    return(\n      <div className='login-container'>\n        <div className='input-container'>\n          <form onSubmit={this.loginUser}>\n            <h2 className='login-text'>\n              Login To Your Account\n            </h2>\n            <input\n              className='email-input'\n              name='email'\n              placeholder='email address'\n              autoFocus\n              value={email}\n              onChange={this.handleChange}\n            />\n            <input\n              className='password-input'\n              placeholder='password'\n              name='password'\n              type='password'\n              value={password}\n              onChange={this.handleChange}\n            />\n            <input\n              className='sign-in-btn'\n              type='submit'\n              name='submit'\n              value='Log in'\n              disabled={!email || !password}\n            />\n            <div className='error'>\n              {user.error && user.error}\n            </div>\n            <h2 className='sign-up-text'>\n              Don't Have An Account?\n              <Link className='signup-link'\n                to='/signup'>\n                Sign Up!\n              </Link>\n            </h2>\n          </form>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({\n  user: state.user\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  fetchUserFromDB: (email, pw) => dispatch(fetchUserFromDB(email, pw))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { loading, error, setUser } from '../actions'\nimport { getBaseUrl } from '../utils/baseUrl'\n\nexport const fetchUserFromDB = (email, password) => {\n  return async dispatch => {\n    dispatch(loading(true));\n    const response = await fetch(`${getBaseUrl()}/api/v1/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({email, password})\n    })\n    if(!response.ok) {\n      dispatch(error(response.statusText))\n    }\n    const user = await response.json()\n    dispatch(loading(false))\n    dispatch(setUser(user))\n  }\n}","export const getBaseUrl = () => {\n  if (process.env.NODE_ENV === 'production')  {\n    return ''\n  } else {\n    return 'http://localhost:3001'\n  }\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addUserToDB } from '../../thunks/adduserToDB'\nimport { Redirect } from 'react-router-dom';\nimport './styles.scss';\n\nclass Signup extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      loggedIn: false,\n      instruction: ''\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.user !== prevProps.user) {\n      this.setState({ loggedIn: true })\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target\n    this.setState({ [name]: value })\n  }\n\n  validatePassword() {\n    const { password, confirmPassword } = this.state\n    return (password === confirmPassword) ? true : false\n  }\n\n  resetForm = () => {\n    this.setState({\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    })\n  }\n\n  handleSubmit = (e) => {\n    const { name, email, password } = this.state\n    e.preventDefault();\n    let match = this.validatePassword();\n    if(match) {\n      this.props.addUserToDB(name, email, password)\n      this.resetForm()\n    } else {\n      this.setState({\n        instruction: 'Something went wrong... Please verify that you have entered the correct password',\n        password: '',\n        confirmPassword: ''\n      })\n    }\n  }\n\n  render() {\n    const { name, email, password, confirmPassword, loggedIn, instruction } = this.state\n\n    if (loggedIn) {\n      return (\n        <Redirect to='/controls' />\n      )\n    }\n\n    return(\n      <section className='container'>\n        <div className='signup-container'>\n          <form\n            className='create-user-form'\n            onSubmit={this.handleSubmit}\n          >\n            <h3 className='create-account-heading'>\n              Create New Account\n            </h3>\n            <input\n              className='newuser-name'\n              type='text'\n              name='name'\n              placeholder='name'\n              autoFocus value={name}\n              onChange={this.handleChange}\n            />\n            <input\n              className='newuser-email'\n              type='email'\n              name='email'\n              placeholder='email'\n              value={email}\n              onChange={this.handleChange}\n            />\n            <input\n              className='newuser-password'\n              type='password'\n              name='password'\n              placeholder='password'\n              value={password}\n              onChange={this.handleChange}\n            />\n            <input\n              className='newuser-password confirm-password'\n              type='password'\n              name='confirmPassword'\n              placeholder='confirm password' \n              value={confirmPassword}\n              onChange={this.handleChange}\n            />\n            <p>{instruction}</p>\n            <button\n              className='signup-btn'\n              type='submit'\n              disabled={!name || !email || !password || !confirmPassword}>\n              Sign Up\n            </button>\n          </form>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({\n  user: state.user\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  addUserToDB: (name, email, password) => dispatch(addUserToDB(name, email, password))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import { loading, error, setUser } from '../actions'\nimport { getBaseUrl } from '../utils/baseUrl'\n\nexport const addUserToDB = (name, email, password) => {\n  return async dispatch => {\n    dispatch(loading(true));\n    const response = await fetch(`${getBaseUrl()}/api/v1/users/new`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ name, email, password })\n    })\n    \n    if (!response.ok) {\n      dispatch(error(response.statusText))\n    }\n    const user = await response.json()\n    dispatch(loading(false))\n    dispatch(setUser(user))\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { removeUser, removeResults, removeSlides, removeAssessment } from '../../actions'\nimport './styles.scss';\n\nconst handleSignOut = () => {\n  const { removeUser, removeResults, removeSlides, removeAssessment } = this.props\n  // localStorage.removeItem('user');\n  removeUser()\n  removeResults()\n  removeSlides()\n  removeAssessment()\n}\n\nconst Controls = (props) => {\n  const { user } = props\n  const userName = user.id ? `${user.name.toUpperCase()}` : 'user'\n\n  return(\n    <div className='outer-container'>\n      <div className='controls-container'>\n        <div className='welcome-container'>\n          <h2 className='welcome-msg'>Welcome, {userName}!</h2>\n            <Link className='sign-out-link' to='/'><button className='sign-out-btn' onClick={() => handleSignOut(props)}>\n              Sign Out\n            </button>\n            </Link>\n        </div>\n        <div className='controls-links'>\n          <Link to='/profile'\n                className='profile-page'>\n                my profile.\n          </Link>\n          <Link to='/personality-types'\n                className='personality-types-page'>\n                personalities.\n          </Link>\n          <Link to='/assessments'\n                className='assessments-page'>\n                assessments.\n          </Link>\n        </div>\n        </div>\n      </div>\n  )\n}\n\nexport const mapStateToProps = state => ({\n  user: state.user\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  removeUser: () => dispatch(removeUser()),\n  removeResults: () => dispatch(removeResults()),\n  removeAssessment: () => dispatch(removeAssessment()),\n  removeSlides: () => dispatch(removeSlides())\n})\n\n\nexport default connect(mapStateToProps)(Controls)\n","import React from 'react'\nimport './Loading.scss'\n\nconst Loading = () => (\n  <div className=\"loading-container\">   \n    <div className=\"loader loader-dots\">\n      <div className=\"dot dot1\" />\n      <div className=\"dot dot2\" />\n      <div className=\"dot dot3\" />\n    </div> \n  </div>\n)\n\nexport default Loading","export const publicKey = 'c967d0cf2ddee5a7b3485c8b86'\n\nexport const secretKey = '4b8956110ae47c2becce0a8318'","import React from 'react';\nimport { connect } from 'react-redux'\n\nconst Error = ({ error }) => {\n  return (\n    <p>{error}</p>\n  )\n}\n\nexport const mapStateToProps = state => ({\n  error: state.error\n})\n\nexport default connect(mapStateToProps)(Error)","import { loading, error, setAssessment, setResults, setSlides } from '../actions'\nimport { publicKey } from '../utils/keys'\n\nexport const fetchResults = (testId) => {\n  return async dispatch => {\n    const url = `https://api.traitify.com/v1/assessments/${testId}?data=blend,types,career_matches`  \n    dispatch(loading(true));\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Basic ${publicKey}:x`\n      }\n    })\n    if (!response.ok) {\n      dispatch(error(response.statusText))\n    }\n    const results = await response.json()\n    dispatch(loading(false))\n    if (results.completed_at) {\n      dispatch(setResults(results))\n    } else {\n      dispatch(setAssessment(Object.assign({}, { id: results.id, deck_id: results.deck_id })))\n      // dispatch(setSlides(results.slides))\n    } \n  }\n}\n\n\n\n\n\n","import React, { Component } from 'react'\nimport Loading from '../../components/Loading'\nimport Error from '../Error'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { fetchAllTests } from '../../thunks/fetchAllTests'\nimport { fetchResults } from '../../thunks/fetchResults'\nimport './Profile.scss';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tests: [],\n      testComplete: ''\n    }\n  }\n\n  componentDidMount() {\n    const { fetchAllTests, user } = this.props\n    fetchAllTests(user.id)\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tests, slides, results} = this.props\n    if(tests !== prevProps.tests) {\n      this.setState({ tests: tests })\n    }\n    if(results !== prevProps.results) {\n      this.setState({ testComplete: 'complete' })\n    }\n    if(slides !== prevProps.slides) {\n      this.setState({ testComplete: 'incomplete' })\n    }\n  }\n\n  recentAssessments() {\n    const { tests } = this.state;\n    if (tests.length) {\n      return tests.map(test => (\n        <button\n          className='test-btn'\n          key={ test.id }\n          onClick={() => this.handleRecentTest(test)}>\n          <p className='test-type'>{test.deck_id}</p>\n          <p>{test.created_at.split('T')[0]}</p>\n        </button>\n      ))\n    }\n  }\n\n  handleRecentTest = (test) => {\n    this.props.fetchResults(test.test_id);\n  }\n\n  render() {\n    const { loading, user, assessment, tests } = this.props;\n    if (!user.id) {\n      return <Redirect to='/login' />\n    }\n    switch (this.state.testComplete) {\n      case 'complete':\n        return <Redirect to='/results' />\n      case 'incomplete':\n        const path = `/assessments/${assessment.deck_id}`\n        return <Redirect to={path} />\n      default:\n        break\n    }\n\n    return (\n      <div className='background-container'>\n        <div className='profile-container'>\n          <h1>your recent assessments.</h1>\n          <div className='tests-container'>\n            {loading && <Loading />}\n            {tests.error && tests.error} \n            { this.recentAssessments() }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport const mapStateToProps = state => ({\n  loading: state.loading,\n  user: state.user,\n  assessment: state.assessment,\n  tests: state.tests,\n  slides: state.slides,\n  results: state.results\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  fetchAllTests: (userId) => dispatch(fetchAllTests(userId)),\n  fetchResults: (testId) => dispatch(fetchResults(testId))\n})\n\n export default connect(mapStateToProps, mapDispatchToProps)(Profile)\n","import { getBaseUrl } from '../utils/baseUrl'\nimport { loading, error, setTests } from '../actions'\n\nexport const fetchAllTests = (userId) => {\n  return async dispatch => {\n    const url = `${getBaseUrl()}/api/v1/results/${userId}`\n    dispatch(loading(true));\n    const response = await fetch(url)\n    if(!response.ok) {\n      dispatch(error(response.statusText))\n    }\n    const tests = await response.json()\n    dispatch(loading(false))\n    dispatch(setTests(tests))\n  }\n}\n","import React from 'react'\nimport './PersonalityCard.scss'\n\nconst PersonalityCard = ({personality_type, description}) => {\n  return (\n    <article className='type'>\n      <h3>{personality_type}.</h3>\n      <div className='description-content'>\n        <p className='type-text'>{description}</p>\n      </div>\n    </article>\n  )\n}\n\nexport default PersonalityCard;\n","import React from 'react'\nimport './PersonalityTypeContainer.scss'\nimport PersonalityCard from '../PersonalityCard'\n\nconst PersonalityTypeContainer = ({ name, badges }) => {\n  const displayCareerTypes = badges.map(object => (\n    <PersonalityCard key={object.personality_type} {...object} /> \n  ))\n\n  return (\n    <div className='types-container'>\n      <h4 className='type-title'>{name}</h4>\n      <div className='grid-container'>\n        {displayCareerTypes}\n      </div>\n    </div>\n  )\n}\n\nexport default PersonalityTypeContainer","import React, { Component } from 'react'\nimport './PersonalityTypes.scss'\nimport { connect } from 'react-redux'\nimport { fetchPersonalities } from '../../thunks/fetchPersonalities'\nimport PersonalityTypeContainer from '../../components/PersonalityTypeContainer'\nimport Loading from '../../components/Loading'\n\nclass PersonalityTypes extends Component {\n  \n  componentDidMount() {\n    const { personalities, fetchPersonalities } = this.props\n    !personalities.length && fetchPersonalities();\n  }\n\n  handleTypesDisplay() {\n    const { personalities } = this.props;\n    return personalities.map(personality => (\n      <PersonalityTypeContainer key={personality.id} {...personality} />\n    )) \n  }\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <div className='background-container'>\n        <div className='personality-container'>\n          <h2 className='personality-title'>\n            personality types.\n          </h2>\n          {loading && <Loading />}\n          {this.handleTypesDisplay()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({\n  loading: state.loading,\n  error: state.error,\n  personalities: state.personalities\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  fetchPersonalities: () => dispatch(fetchPersonalities())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PersonalityTypes)\n","import { publicKey } from '../utils/keys'\nimport { loading, error, setPersonalities } from '../actions'\n\nexport const fetchPersonalities = () => {\n  return async dispatch => {\n    dispatch(loading(true));\n    const response = await fetch('https://api.traitify.com/v1/decks', {\n      method: 'GET',\n      headers: {\n        'Authorization': `Basic ${publicKey}:x`\n      }\n    })\n    if (!response.ok) {\n      dispatch(error(response.statusText))\n    }\n    const personalities = await response.json()\n    dispatch(loading(false))\n    dispatch(setPersonalities(personalities))\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './AssessmentsList.scss'\n\nconst AssessmentsList = () => (\n  <div className='background-container'>\n    <div className='list-container'>\n      <h1 className='assessment-list-heading'>take an assessment.</h1>\n      <div className=\"test-link-container\">\n        <Link to=\"/assessments/core\" className='link'>\n        core.\n        </Link>\n        <Link to=\"/assessments/career\" className='link'>\n        career.\n        </Link>\n        <Link to=\"/assessments/intro-extro\" className='link'>\n        intro/extro.\n        </Link>\n        <Link to=\"/assessments/heroes\" className='link'>\n        heroes.\n        </Link>\n        <Link to=\"/assessments/movies\" className='link'>\n        movies.\n        </Link>\n        <Link to=\"/assessments/persuasion\" className='link'>\n          persuasion.\n        </Link>\n      </div>\n    </div>\n  </div>\n)\n\nexport default AssessmentsList\n","import React from 'react'\nimport './Slide.scss'\n\nconst Slide = ({ slideData, manageSlideUpdate }) => {\n  const { caption, image_desktop_retina } = slideData\n  \n  return (\n    <div>\n      <h3 className='slide-caption'>{caption}</h3>\n      <img className='slide-image' src={image_desktop_retina} alt=\"slide\" />\n      <div className='btn-container'>\n        <button\n          className='me-btn'\n          onClick={() => manageSlideUpdate(slideData, true)}>\n          Me\n        </button>\n        <button\n          className='not-me-btn'\n          onClick={() => manageSlideUpdate(slideData, false)}>\n          Not Me\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Slide\n","import React, { Component } from 'react'\nimport './Assessments.scss'\nimport Loading from '../../components/Loading'\nimport Slide from '../../components/Slide'\nimport { fetchAssessment } from '../../thunks/fetchAssessment'\nimport { addTestInfo } from '../../thunks/addTestInfo'\nimport { fetchSlides } from '../../thunks/fetchSlides'\nimport { updateSlideResponse } from '../../thunks/updateSlideResponse'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass Assessments extends Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0,\n      loggedIn: true,\n    }\n  }\n\n  componentDidMount() {\n    const { user, testType, fetchAssessment } = this.props;\n    !user.id ? this.setState({loggedIn: false}) : fetchAssessment(testType)\n  }\n\n  componentDidUpdate(prevProps) {\n    const { user, assessment, fetchSlides, addTestInfo } = this.props\n    if(assessment !== prevProps.assessment) {\n      const { id, deck_id } = assessment\n      fetchSlides(assessment.id)\n      addTestInfo(id, deck_id, user.id)\n    }\n  }\n  \n  manageSlideUpdate = (slide, boolean) => {\n    const { assessment, updateSlideResponse } = this.props;\n    slide.response = boolean;\n    updateSlideResponse(slide, assessment.id);\n    this.setState({ counter: this.state.counter + 1 })\n  }\n               \n  handleSlideDisplay(slideToRender) {\n    const { slides } = this.props;\n    if (slides.length) {\n      return slideToRender ?\n        <Slide\n          slideData={slideToRender}\n          manageSlideUpdate={this.manageSlideUpdate}\n        />\n      :\n      <div className='completion-container'>\n        <h3 className='completion-message'>You have completed your assessment!</h3>\n        <Link to='/results' className='results-link'>\n          View your results\n        </Link>\n      </div>\n    } \n  }\n  \n  render() {\n    const { slides } = this.props;\n    const slideToRender = slides[this.state.counter];\n    if (!this.state.loggedIn) {\n      return <Redirect to='/login' />\n    }\n\n    return (\n      <div className='slide-container'>\n        {!slides.length && <Loading />}\n        {this.handleSlideDisplay(slideToRender)}\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({\n  user: state.user,\n  slides: state.slides,\n  loading: state.loading,\n  assessment: state.assessment\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  fetchAssessment: (testType) => dispatch(fetchAssessment(testType)),\n  addTestInfo: (test_id, deck_id, user_id) => dispatch(addTestInfo(test_id, deck_id, user_id)),\n  fetchSlides: (testId) => dispatch(fetchSlides(testId)),\n  updateSlideResponse: (slide, testId) => dispatch(updateSlideResponse(slide, testId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Assessments);\n","import { loading, error, setAssessment} from '../actions'\nimport { secretKey } from '../utils/keys'\n\nexport const fetchAssessment = (testType) => {\n  return async dispatch => {\n    dispatch(loading(true));\n    const response = await fetch('https://api.traitify.com/v1/assessments', {\n      method: 'POST',\n      body: JSON.stringify({ 'deck_id': testType }),\n      headers: {\n        'Authorization': `Basic ${secretKey}:x`,\n        'Content-Type': 'application/json'\n      }\n    })\n    if(!response.ok) {\n      dispatch(error(response.statusText))\n    }\n    const assessment = await response.json()\n    dispatch(loading(false))\n    dispatch(setAssessment(assessment))\n  }\n}\n","import { getBaseUrl } from '../utils/baseUrl'\n\nexport const addTestInfo = (test_id, deck_id, user_id) => {\n  return async dispatch => {\n    const url = `${getBaseUrl()}/api/v1/results`\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n        body: JSON.stringify({ test_id, deck_id, user_id })\n      })\n    return await response.json()\n  }\n}","import { loading, error, setSlides } from '../actions'\nimport { publicKey } from '../utils/keys'\n\nexport const fetchSlides = (testId) => {\n  return async dispatch => {\n    const url = `https://api.traitify.com/v1/assessments/${testId}/slides`\n    dispatch(loading(true));\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Basic ${publicKey}:x`\n      }\n    })\n    if(!response.ok) {\n      dispatch(error(response.statusText))\n    }\n    const slides = await response.json()\n    dispatch(loading(false))\n    dispatch(setSlides(slides))\n  }\n}\n","import { loading, error } from '../actions'\nimport { publicKey } from '../utils/keys'\n\nexport const updateSlideResponse = (slide, testId) => {\n  return async dispatch => {\n    const url = `https://api.traitify.com/v1/assessments/${testId}/slides/${slide.id}`\n    dispatch(loading(true));\n    const response = await fetch(url, {\n      method: 'PUT',\n      body: JSON.stringify({\n        id: slide.id,\n        response: slide.response,\n        time_taken: 2000,\n      }),\n      headers: {\n        'Authorization': `Basic ${publicKey}:x`,\n        'Content-Type': 'application/json'\n      }\n    })\n    if(!response.ok) {\n      dispatch(error(response.statusText))\n    }\n    dispatch(loading(false))\n    return await response.json()\n  }\n}\n","import React from 'react'\nimport './IntroExtroResults.scss'\n\nconst IntroExtroResults = ({ personality_types }) => {\n\n  const introExtroDisplay = personality_types.map( object => {\n    return (\n      <div className='intro-extro-type'\n           key={ object.personality_type.name }>\n        <div className='main-info'>\n          <div className='title-container'>\n            <img src={ object.personality_type.badge.image_small } alt=\"badge\"/>\n            <h4>{ object.personality_type.name }</h4>\n          </div>\n          <p>{ object.personality_type.description }</p>\n          <h4 className='score-info'>Score: { Math.round(object.score * 1000)/1000 }</h4>\n        </div>\n        <div className='extra-info'>\n          <h4>{ object.personality_type.details[0].title}</h4>\n          <p>{ object.personality_type.details[0].body}</p>\n          <p><span className='keywords'>Keywords:</span> { object.personality_type.keywords}</p>\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <div className='intro-extro-container'>\n      { introExtroDisplay }\n    </div>\n  )\n}\n\nexport default IntroExtroResults\n","import React from 'react'\nimport './CoreResults.scss'\n\nconst CoreResults = ({ personality_blend, personality_types, }) => {\n\n  const complementConflict = personality_blend.details.map( object => {\n    return (\n      <div className='complement-conflict'>\n        <h6>{ object.title }</h6>\n        <p>{ object.body }</p>\n      </div>\n    )\n  })\n\n  const personalityMatches = personality_types.map( type => {\n    const { name, description, badge, keywords } = type.personality_type\n    return (\n      <div className='personality-card'>\n        <img src={ badge.image_small } alt=\"personality-icon\"/>\n        <h3>{ name }</h3>\n        <h4>Match Score: { Math.round(type.score * 1000)/1000 }</h4>\n        <div className='description-text'>\n          <p className='text'>{ description }</p>\n          <p className='text traits'>Key Traits: { keywords }</p>\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <div className='core-type'>\n      <div className='blend'>\n        <div className='blend-heading'>\n          <img src={ personality_blend.personality_type_1.badge.image_small } alt='badge'/>\n          <h2>Personality Blend</h2>\n          <img src={ personality_blend.personality_type_2.badge.image_small } alt='badge'/>\n        </div>\n        <div className='blend-text'>\n          <h4>{ personality_blend.name }</h4>\n          <p>{ personality_blend.description }</p>\n        </div>\n        <div className='blend-extra-info'>\n          { complementConflict }\n        </div>\n      </div>\n      <div className='personality-hits'>\n        <h2>Your personality</h2>\n        <div className='personality-matches'>\n          { personalityMatches }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CoreResults\n","import React from 'react'\nimport './CareerResults.scss'\n\nconst CareerResults = ({ personality_blend, personality_types, career_matches}) => {\n\n  const complementConflict = personality_blend.details.map( object => {\n    return (\n      <div className='complement-conflict'>\n        <h6>{ object.title }</h6>\n        <p>{ object.body }</p>\n      </div>\n    )\n  })\n\n  const careerMatches = career_matches.map( career => {\n    const { title, picture, description } = career.career\n    return (\n      <div className='career-card'>\n        <img src={ picture } alt='career'/>\n        <h4>{ title }</h4>\n        <h6>Match Score: { Math.round(career.score * 1000)/1000 }</h6>\n        <div className=\"description-text\">\n          <p className='text'>{ description }</p>\n        </div>\n      </div>\n    )\n  })\n\n\n  return (\n    <div className='career-type'>\n      <div className='blend'>\n        <div className='blend-heading'>\n          <img src={ personality_blend.personality_type_1.badge.image_small } alt='badge'/>\n          <h2>Personality Blend</h2>\n          <img src={ personality_blend.personality_type_2.badge.image_small } alt='badge'/>\n        </div>\n        <div className='blend-text'>\n          <h4>{ personality_blend.name }</h4>\n          <p>{ personality_blend.description }</p>\n        </div>\n        <div className='blend-extra-info'>\n          { complementConflict }\n        </div>\n      </div>\n      <div className='career-matches'>\n        <h2>Career Matches</h2>\n        <div className='career-grid'>\n          { careerMatches }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CareerResults\n","import React from 'react'\nimport './HeroesResults.scss'\n\nconst HeroesResults = ({ personality_blend, personality_types }) => {\n\n  const personalityMatches = personality_types.map( type => {\n    const { name, description, badge, keywords } = type.personality_type\n    return (\n      <div className='personality-card'>\n        <img src={ badge.image_small } alt=\"personality-icon\"/>\n        <h3>{ name }</h3>\n        <h4>Match Score: { Math.round(type.score * 1000)/1000 }</h4>\n        <div className='description-text'>\n          <p className='text'>{ description }</p>\n          <p className='text traits'>Key Traits: { keywords }</p>\n      </div>\n      </div>\n    )\n  })\n\n  return (\n    <div className='super-hero-type'>\n      <div className='blend'>\n        <h2>Personality Blend</h2>\n        <div className='blend-images'>\n          <img src={ personality_blend.personality_type_1.badge.image_small } alt=\"badge\"/>\n          <img src={ personality_blend.personality_type_2.badge.image_small } alt=\"badge\"/>\n        </div>\n        <div className='blend-text'>\n          <h4>{ personality_blend.name }</h4>\n          <p>{ personality_blend.description }</p>\n        </div>\n      </div>\n      <h2 className='your-personality'>Your personality</h2>\n      <div className=\"personality-matches\">\n        { personalityMatches }\n      </div>\n    </div>\n  )\n}\n\nexport default HeroesResults\n","import React from 'react'\nimport './MoviesResults.scss'\n\nconst MoviesResults = ({ personality_blend, personality_types }) => {\n\n  const personalityMatches = personality_types.map( type => {\n    const { name, description, badge, keywords } = type.personality_type\n    return (\n      <div className='personality-card'>\n        <img src={ badge.image_small } alt=\"personality-icon\"/>\n        <h3>{ name }</h3>\n        <h4>Match Score: { Math.round(type.score * 1000)/1000 }</h4>\n        <div className=\"description-text\">\n          <p className='text'>{ description }</p>\n          <p className='text traits'>Key Traits: { keywords }</p>\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <div className='movies-type'>\n      <div className='blend'>\n        <h2>Personality Blend</h2>\n        <div className='blend-images'>\n          <img src={ personality_blend.personality_type_1.badge.image_small } alt=\"badge\"/>\n          <img src={ personality_blend.personality_type_2.badge.image_small } alt=\"badge\"/>\n        </div>\n        <div className='blend-text'>\n          <h4>{ personality_blend.name }</h4>\n          <p>{ personality_blend.description }</p>\n        </div>\n      </div>\n      <h2>Your personality</h2>\n      <div className=\"personality-matches\">\n        { personalityMatches }\n      </div>\n    </div>\n  )\n}\n\nexport default MoviesResults\n","import React from 'react'\nimport './PersuasionResults.scss'\n\nconst PersuasionResults = ({ personality_types }) => {\n\n  const persuasionMatches = personality_types.map( type => {\n    const { name, description, badge, keywords } = type.personality_type\n    return (\n      <div className='personality-card'>\n        <img src={ badge.image_small } alt=\"personality-icon\"/>\n        <h3>{ name }</h3>\n        <h4>Match Score: { Math.round(type.score * 1000)/1000 }</h4>\n        <div className='description-text'>\n          <p className='text'>{ description }</p>\n          <p className='text traits'>Key Traits: { keywords }</p>\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    <div className='persuasion-type'>\n      <h2>Your personality</h2>\n      <div className='personality-matches'>\n        { persuasionMatches }\n      </div>\n    </div>\n  )\n}\n\nexport default PersuasionResults\n","import React, { Component } from 'react'\nimport './Results.scss'\nimport { fetchResults } from '../../thunks/fetchResults'\nimport IntroExtroResults from '../../components/IntroExtroResults'\nimport CoreResults from '../../components/CoreResults'\nimport CareerResults from '../../components/CareerResults'\nimport HeroesResults from '../../components/HerosResults'\nimport MoviesResults from '../../components/MoviesResults'\nimport PersuasionResults from '../../components/PersuasionResults'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nclass Results extends Component {\n  constructor() {\n    super();\n    this.state = {\n      deckId: '',\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.assessment !== {}) {\n      this.props.fetchResults(this.props.assessment.id);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { results } = this.props\n    if (results !== prevProps.results) {\n      this.setState({ deckId: results.deck_id })\n    }\n  }\n\n  handleResultsDisplay() {\n    const { deckId } = this.state;\n    const { results } = this.props;\n\n    switch (deckId) {\n      case 'introvert-extrovert':\n        return <IntroExtroResults {...results} />\n      case 'career-deck' :\n        return <CareerResults {...results} />\n      case 'core':\n        return <CoreResults {...results} />\n      case 'super-hero':\n        return <HeroesResults {...results} />\n      case 'persuasion':\n        return <PersuasionResults {...results} />\n      case 'movies':\n        return <MoviesResults {...results} />\n      default:\n        return <h4>No results available.</h4>\n    }\n  }\n\n  render() {\n    if (!this.props.user.id) {\n      return <Redirect to='/login' />\n    }\n\n    return (\n      <div className='outside-container'>\n        <div className='inside-container'>\n          <h2 className='results-title'>\n            your assessment results.\n          </h2>\n          <div className='results-container'>\n            { this.handleResultsDisplay() }\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({\n  user: state.user,\n  assessment: state.assessment,\n  results: state.results\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  fetchResults: (testId) => dispatch(fetchResults(testId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Results)\n","import React from 'react'\nimport './App.scss'\nimport { Route, Switch } from 'react-router-dom'\nimport LandingPage from '../../containers/LandingPage'\nimport Header from '../../containers/Header'\nimport Login from '../../containers/Login'\nimport Signup from '../../containers/Signup'\nimport Controls from '../../containers/Controls'\nimport Profile from '../../containers/Profile'\nimport PersonalityTypes from '../../containers/PersonalityTypes'\nimport AssessmentsList from '../AssessmentsList'\nimport Assessments from '../../containers/Assessments'\nimport Results from '../../containers/Results'\n\nconst App = () => (\n  <div className='App'>\n    <Switch>\n      <Route exact path='/' component={LandingPage} />\n      <Route path='/' component={Header} />\n    </Switch>\n    <Route exact path='/login' component={Login} />\n    <Route exact path='/signup' component={Signup} />\n    <Route exact path='/controls' component={Controls} />\n    <Route exact path='/profile' component={Profile} />\n    <Route exact path='/personality-types' component={PersonalityTypes} />\n    <Route exact path='/assessments' component={AssessmentsList} />\n    <Route exact path='/assessments/core' render={() => <Assessments testType={'core'} />} />\n    <Route exact path='/assessments/career' render={() => <Assessments testType={'career-deck'} />} />\n    <Route exact path='/assessments/intro-extro' render={() => <Assessments testType={'introvert-extrovert'} />} />\n    <Route exact path='/assessments/heroes' render={() => <Assessments testType={'super-hero'} />} />\n    <Route exact path='/assessments/movies' render={() => <Assessments testType={'movies'} />} />\n    <Route exact path='/assessments/persuasion' render={() => <Assessments testType={'persuasion'} />} />\n    <Route exact path='/results' component={Results} />\n  </div>\n)\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\nimport { assessment } from './assessment-reducer'\nimport { error } from './error-reducer'\nimport { loading } from './loading-reducer'\nimport { personalities } from './personalities-reducer'\nimport { results } from './results-reducer'\nimport { slides } from './slides-reducer'\nimport { tests } from './tests-reducer'\nimport { user } from './user-reducer'\n\nexport const rootReducer = combineReducers({\n  assessment,\n  error,\n  loading,\n  personalities,\n  results,\n  slides,\n  tests,\n  user\n})","export const assessment = (state = {}, action) => {\n  switch(action.type) {\n    case 'SET_ASSESSMENT':\n      return action.assessment\n    case 'REMOVE_ASSESSMENT':\n      return {}\n    default:\n      return state\n  }\n}","export const error = (state = '', action) => {\n  switch(action.type) {\n    case 'ERROR':\n      return action.msg\n    default: \n      return state\n  }\n}","export const loading = (state = false, action) => {\n  switch(action.type) {\n    case 'LOADING':\n      return action.loading\n    default:\n      return state\n  }\n}","export const personalities = (state = [], action) => {\n  switch(action.type) {\n    case 'SET_PERSONALITIES':\n      return action.personalities\n    default:\n      return state\n  }\n}","export const results = (state = {}, action) => {\n  switch(action.type) {\n    case 'SET_RESULTS':\n      return action.results\n    case 'REMOVE_RESULTS':\n      return {}\n    default: \n      return state\n  }\n}","export const slides = (state = [], action) => {\n  switch(action.type) {\n    case 'SET_SLIDES':\n      return action.slides\n    case 'REMOVE_SLIDES':\n      return []\n    default: \n      return state\n  }\n}","export const tests = (state = [], action) => {\n  switch(action.type) {\n    case 'SET_TESTS':\n      return action.tests\n    case 'REMOVE_TESTS':\n      return []\n    default:\n      return state\n  }\n}","export const user = (state = {}, action) => {\n  switch(action.type) {\n    case 'SET_USER':\n      return action.user\n    case 'REMOVE_USER':\n      return {}\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { BrowserRouter } from 'react-router-dom'\nimport thunk from 'redux-thunk'\nimport { rootReducer } from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}